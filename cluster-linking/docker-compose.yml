---
version: '3.4'
services:
  zookeeper1:
    cpus: 0.7
    image: confluentinc/cp-zookeeper:$TAG
    hostname: zookeeper1
    container_name: zookeeper1
    ports:
      - "1181:1181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 1181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=*
    networks:
      example.com: {}

  kafka1:
    cpus: 0.7
    image: confluentinc/cp-server:$TAG
    hostname: kafka1
    container_name: kafka1
    ports:
      - "1092:9092"
      - "8090:8090"
      - "9991:9991"
    depends_on:
      - zookeeper1
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:1181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:1092,PLAINTEXT://kafka1:1093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_EXPORTER_KAFKA_TOPIC_REPLICAS: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_CLUSTER_LINK_ENABLE: 'true'
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka1:1093"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: "true"
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_LOG4J_ROOT_LOGLEVEL: DEBUG
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_ENABLE: 'false'
      KAFKA_JMX_PORT: 9991
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      example.com: {}

  zookeeper2:
    cpus: 0.7
    image: confluentinc/cp-zookeeper:$TAG
    hostname: zookeeper2
    container_name: zookeeper2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=*
    networks:
      example.com: {}

  kafka2:
    cpus: 0.7
    image: confluentinc/cp-server:$TAG
    hostname: kafka2
    container_name: kafka2
    restart: always
    ports:
      - "2092:2092"
    depends_on:
      - zookeeper2
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper2:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:2092,PLAINTEXT://kafka2:2093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_EXPORTER_KAFKA_TOPIC_REPLICAS: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_CLUSTER_LINK_ENABLE: 'true'
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka2:2093"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: "true"
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_LOG4J_ROOT_LOGLEVEL: DEBUG
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_ENABLE: 'false'
      KAFKA_JMX_PORT: 9991
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      example.com: {}

networks:
  example.com:
    name: "example.com"
    driver: bridge
