version: "3.4"
services:
  zookeeper:
    cpus: 0.7
    image: confluentinc/cp-zookeeper:$TAG
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888;zookeeper1:12888:13888;zookeeper2:22888:23888
      KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=*
    networks:
      example.com: {}

  zookeeper1:
    cpus: 0.7
    image: confluentinc/cp-zookeeper:$TAG
    hostname: zookeeper1
    container_name: zookeeper1
    ports:
      - "12181:12181"
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 12181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888;zookeeper1:12888:13888;zookeeper2:22888:23888
      KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=*
    networks:
      example.com: {}

  zookeeper2:
    cpus: 0.7
    image: confluentinc/cp-zookeeper:$TAG
    hostname: zookeeper2
    container_name: zookeeper2
    ports:
      - "22181:22181"
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888;zookeeper1:12888:13888;zookeeper2:22888:23888
      KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=*
    networks:
      example.com: {}

  kafka:
    cpus: 0.7
    image: confluentinc/cp-server:$TAG
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9991:9991"
    depends_on:
      - zookeeper
      - zookeeper1
      - zookeeper2
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181,zookeeper1:12181,zookeeper2:22181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:9092,PLAINTEXT://kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_EXPORTER_KAFKA_TOPIC_REPLICAS: 2
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka:9093,kafka1:19093,kafka2:29093"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: "true"
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_ENABLE: 'false'
      KAFKA_JMX_PORT: 9991
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: -javaagent:/plugin/jolokia-jvm-1.7.0.jar=port=8778,host=0.0.0.0
    volumes:
      - ./plugin:/plugin
    networks:
      example.com: {}

  kafka1:
    cpus: 0.7
    image: confluentinc/cp-server:$TAG
    hostname: kafka1
    container_name: kafka1
    ports:
      - "19092:19092"
      - "19991:19991"
    depends_on:
      - zookeeper
      - zookeeper1
      - zookeeper2
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181,zookeeper1:12181,zookeeper2:22181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:19092,PLAINTEXT://kafka1:19093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_EXPORTER_KAFKA_TOPIC_REPLICAS: 2
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka:9093,kafka1:19093,kafka2:29093"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'true'
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_ENABLE: 'false'
      KAFKA_JMX_PORT: 19991
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: -javaagent:/plugin/jolokia-jvm-1.7.0.jar=port=8778,host=0.0.0.0
    volumes:
      - ./plugin:/plugin
    networks:
      example.com: {}

  kafka2:
    cpus: 0.7
    image: confluentinc/cp-server:$TAG
    hostname: kafka2
    container_name: kafka2
    ports:
      - "29092:29092"
      - "29991:29991"
    depends_on:
      - zookeeper
      - zookeeper1
      - zookeeper2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181,zookeeper1:12181,zookeeper2:22181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:29092,PLAINTEXT://kafka2:29093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_EXPORTER_KAFKA_TOPIC_REPLICAS: 2
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka:9093,kafka1:19093,kafka2:29093"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'true'
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_ENABLE: 'false'
      KAFKA_JMX_PORT: 29991
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: -javaagent:/plugin/jolokia-jvm-1.7.0.jar=port=8778,host=0.0.0.0
    volumes:
      - ./plugin:/plugin
    networks:
      example.com: {}

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.0
    cpus: 0.8
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: "-Xms512M -Xmx512M"
      cluster.name: "elasticsearch-demo"
    networks:
      example.com: {}

  metricbeat:
    image: docker.elastic.co/beats/metricbeat-oss:7.10.0
    user: root
    hostname: metricbeat
    container_name: metricbeat
    cpus: 0.2
    restart: always
    volumes:
      - ./metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -e
    networks:
      example.com: {}
 
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.10.0
    container_name: kibana
    restart: always
    cpus: 0.7
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    environment:
      NEWSFEED_ENABLED: 'false'
      TELEMETRY_OPTIN: 'false'
      TELEMETRY_ENABLED: 'false'
      SERVER_MAXPAYLOADBYTES: 4194304
      KIBANA_AUTOCOMPLETETIMEOUT: 3000
      KIBANA_AUTOCOMPLETETERMINATEAFTER: 2500000
    networks:
      example.com: {}

networks:
  example.com:
    name: "example.com"
    driver: bridge
