---
version: '3.4'
services:
  zookeeper1:
    cpus: 0.7
    image: confluentinc/cp-zookeeper:$TAG
    hostname: zookeeper1
    container_name: zookeeper1
    ports:
      - "1181:1181"
      - "1999:1999"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 1181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: "zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888"
      KAFKA_JMX_PORT: 1999
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=*
        -Dcom.sun.management.jmxremote=true
        -Dcom.sun.management.jmxremote.ssl=false
        -Dcom.sun.management.jmxremote.authenticate=false
    networks:
      example.com: {}

  zookeeper2:
    cpus: 0.7
    image: confluentinc/cp-zookeeper:$TAG
    hostname: zookeeper2
    container_name: zookeeper2
    ports:
      - "2181:2181"
      - "2999:2999"
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: "zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888"
      KAFKA_JMX_PORT: 2999
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=*
        -Dcom.sun.management.jmxremote=true
        -Dcom.sun.management.jmxremote.ssl=false
        -Dcom.sun.management.jmxremote.authenticate=false
    networks:
      example.com: {}


  zookeeper3:
    cpus: 0.7
    image: confluentinc/cp-zookeeper:$TAG
    hostname: zookeeper3
    container_name: zookeeper3
    ports:
      - "3181:3181"
      - "3999:3999"
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 3181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: "zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888"
      KAFKA_JMX_PORT: 3999
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=*
        -Dcom.sun.management.jmxremote=true
        -Dcom.sun.management.jmxremote.ssl=false
        -Dcom.sun.management.jmxremote.authenticate=false
    networks:
      example.com: {}

  kafka1:
    cpus: 0.7
    image: confluentinc/cp-server:$TAG
    hostname: kafka1
    container_name: kafka1
    restart: on-failure:3
    ports:
      - 1090:1090
      - 1092:1092
      - 1093:1093
      - 1991:1991
    volumes:
      - ./jmx:/jmx
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:1181,zookeeper2:2181,zookeeper3:3181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:1092,PLAINTEXT://kafka1:1093
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_ENABLE: 'false'

      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO

      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:1093,PLAINTEXT://kafka2:2093,PLAINTEXT://kafka3:3093
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: PLAINTEXT
      CONFLUENT_METRICS_REPORTER_MAX_REQUEST_SIZE: 10485760
      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      CONFLUENT_METRICS_ENABLE: 'false'

      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schemaregistry:8081

      KAFKA_CONFLUENT_BALANCER_ENABLE: 'true'

      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_ENABLE: 'false'
      KAFKA_KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:1093,PLAINTEXT://kafka2:2093,PLAINTEXT://kafka3:3093

      KAFKA_JMX_PORT: 1991
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.password.file=/jmx/jmxremote.password -Dcom.sun.management.jmxremote.access.file=/jmx/jmxremote.access -Dcom.sun.management.jmxremote.ssl=false"
    networks:
      example.com: {}

  kafka2:
    cpus: 0.7
    image: confluentinc/cp-server:$TAG
    hostname: kafka2
    container_name: kafka2
    restart: on-failure:3
    ports:
      - 2090:2090
      - 2092:2092
      - 2093:2093
      - 2991:2991
    volumes:
      - ./jmx:/jmx
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:1181,zookeeper2:2181,zookeeper3:3181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:2092,PLAINTEXT://kafka2:2093
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_ENABLE: 'false'

      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO

      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:1093,PLAINTEXT://kafka2:2093,PLAINTEXT://kafka3:3093
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: PLAINTEXT
      CONFLUENT_METRICS_REPORTER_MAX_REQUEST_SIZE: 10485760
      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      CONFLUENT_METRICS_ENABLE: 'false'

      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schemaregistry:8081

      KAFKA_CONFLUENT_BALANCER_ENABLE: 'true'

      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_ENABLE: 'false'
      KAFKA_KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:1093,PLAINTEXT://kafka2:2093,PLAINTEXT://kafka3:3093

      KAFKA_JMX_PORT: 2991
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.password.file=/jmx/jmxremote.password -Dcom.sun.management.jmxremote.access.file=/jmx/jmxremote.access -Dcom.sun.management.jmxremote.ssl=false"
    networks:
      example.com: {}

  kafka3:
    cpus: 0.7
    image: confluentinc/cp-server:$TAG
    hostname: kafka3
    container_name: kafka3
    restart: on-failure:3
    ports:
      - 3090:3090
      - 3092:3092
      - 3093:3093
      - 3991:3991
    volumes:
      - ./jmx:/jmx
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:1181,zookeeper2:2181,zookeeper3:3181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:3092,PLAINTEXT://kafka3:3093
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_ENABLE: 'false'

      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO

      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:1093,PLAINTEXT://kafka2:2093,PLAINTEXT://kafka3:3093
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: PLAINTEXT
      CONFLUENT_METRICS_REPORTER_MAX_REQUEST_SIZE: 10485760
      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'
      CONFLUENT_METRICS_ENABLE: 'false'

      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schemaregistry:8081

      KAFKA_CONFLUENT_BALANCER_ENABLE: 'true'

      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_ENABLE: 'false'
      KAFKA_KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:1093,PLAINTEXT://kafka2:2093,PLAINTEXT://kafka3:3093

      KAFKA_JMX_PORT: 3991
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.password.file=/jmx/jmxremote.password -Dcom.sun.management.jmxremote.access.file=/jmx/jmxremote.access -Dcom.sun.management.jmxremote.ssl=false"
    networks:
      example.com: {}

  schemaregistry:
    image: confluentinc/cp-schema-registry:$TAG
    hostname: schemaregistry
    container_name: schemaregistry
    restart: on-failure:3
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
    - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_GROUP_ID: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka1:1093,kafka2:2093,kafka3:3093'
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_DEBUG: 'true'
    networks:
      example.com: {}

networks:
  example.com:
    name: "example.com"
    driver: bridge
